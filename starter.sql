--------------------------------------------------------------------------------
-- TABLES
--------------------------------------------------------------------------------
CREATE TABLE DIARY_ENTRY (
  ENTRY_ID      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ENTRY_DATE    DATE         NOT NULL,
  TITLE         VARCHAR2(200) NOT NULL,
  BODY          CLOB         NOT NULL,
  VISIBILITY    VARCHAR2(10)  DEFAULT 'PRIVATE'  NOT NULL
                 CHECK (VISIBILITY IN ('PUBLIC','PRIVATE')),
  STATUS        VARCHAR2(10)  DEFAULT 'DRAFT'    NOT NULL
                 CHECK (STATUS IN ('DRAFT','PUBLISHED')),
  MOOD          VARCHAR2(20),
  LOCATION      VARCHAR2(200),
  CREATED_ON    TIMESTAMP(6)  DEFAULT SYSTIMESTAMP NOT NULL,
  CREATED_BY    VARCHAR2(128) DEFAULT COALESCE(
                   SYS_CONTEXT('APEX$SESSION','APP_USER'),
                   SYS_CONTEXT('USERENV','SESSION_USER')
                 ) NOT NULL,
  UPDATED_ON    TIMESTAMP(6),
  UPDATED_BY    VARCHAR2(128)
);

COMMENT ON TABLE  DIARY_ENTRY IS 'Diary entries (journal).';
COMMENT ON COLUMN DIARY_ENTRY.ENTRY_DATE IS 'Logical date of the entry (shown in Calendar).';
COMMENT ON COLUMN DIARY_ENTRY.BODY       IS 'Full text (CLOB).';

CREATE TABLE TAG (
  TAG_ID        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NAME          VARCHAR2(50)   NOT NULL,
  COLOR_HEX     VARCHAR2(7), -- e.g. #3F51B5 (optional)
  CREATED_ON    TIMESTAMP(6)  DEFAULT SYSTIMESTAMP NOT NULL,
  CREATED_BY    VARCHAR2(128) DEFAULT COALESCE(
                   SYS_CONTEXT('APEX$SESSION','APP_USER'),
                   SYS_CONTEXT('USERENV','SESSION_USER')
                 ) NOT NULL,
  UPDATED_ON    TIMESTAMP(6),
  UPDATED_BY    VARCHAR2(128),
  CONSTRAINT UK_TAG_NAME UNIQUE (NAME)
);

COMMENT ON TABLE TAG IS 'Reusable labels for entries.';

CREATE TABLE DIARY_ENTRY_TAG (
  ENTRY_ID  NUMBER NOT NULL,
  TAG_ID    NUMBER NOT NULL,
  CONSTRAINT PK_DIARY_ENTRY_TAG PRIMARY KEY (ENTRY_ID, TAG_ID),
  CONSTRAINT FK_DET_ENTRY FOREIGN KEY (ENTRY_ID)
    REFERENCES DIARY_ENTRY (ENTRY_ID)
    ON DELETE CASCADE,
  CONSTRAINT FK_DET_TAG FOREIGN KEY (TAG_ID)
    REFERENCES TAG (TAG_ID)
    ON DELETE CASCADE
);

COMMENT ON TABLE DIARY_ENTRY_TAG IS 'Junction table for tags per entry.';

--------------------------------------------------------------------------------
-- TRIGGERS (audit "updated_*")
--------------------------------------------------------------------------------
CREATE OR REPLACE TRIGGER DIARY_ENTRY_BIUR
BEFORE INSERT OR UPDATE ON DIARY_ENTRY
FOR EACH ROW
BEGIN
  IF INSERTING THEN
    IF :NEW.CREATED_ON IS NULL THEN
      :NEW.CREATED_ON := SYSTIMESTAMP;
    END IF;
    IF :NEW.CREATED_BY IS NULL THEN
      :NEW.CREATED_BY := COALESCE(
        SYS_CONTEXT('APEX$SESSION','APP_USER'),
        SYS_CONTEXT('USERENV','SESSION_USER')
      );
    END IF;
  END IF;

  IF UPDATING THEN
    :NEW.UPDATED_ON := SYSTIMESTAMP;
    :NEW.UPDATED_BY := COALESCE(
      SYS_CONTEXT('APEX$SESSION','APP_USER'),
      SYS_CONTEXT('USERENV','SESSION_USER')
    );
  END IF;
END;
/
SHOW ERRORS

CREATE OR REPLACE TRIGGER TAG_BIUR
BEFORE INSERT OR UPDATE ON TAG
FOR EACH ROW
BEGIN
  IF INSERTING THEN
    IF :NEW.CREATED_ON IS NULL THEN
      :NEW.CREATED_ON := SYSTIMESTAMP;
    END IF;
    IF :NEW.CREATED_BY IS NULL THEN
      :NEW.CREATED_BY := COALESCE(
        SYS_CONTEXT('APEX$SESSION','APP_USER'),
        SYS_CONTEXT('USERENV','SESSION_USER')
      );
    END IF;
  END IF;

  IF UPDATING THEN
    :NEW.UPDATED_ON := SYSTIMESTAMP;
    :NEW.UPDATED_BY := COALESCE(
      SYS_CONTEXT('APEX$SESSION','APP_USER'),
      SYS_CONTEXT('USERENV','SESSION_USER')
    );
  END IF;
END;
/
SHOW ERRORS

--------------------------------------------------------------------------------
-- INDEXES (help calendar/list/search)
--------------------------------------------------------------------------------
CREATE INDEX DIARY_ENTRY_NK1 ON DIARY_ENTRY (ENTRY_DATE);
CREATE INDEX DIARY_ENTRY_NK2 ON DIARY_ENTRY (UPPER(TITLE));

--------------------------------------------------------------------------------
-- VIEW: entries with CSV tags (handy for APEX Cards/IR display)
--------------------------------------------------------------------------------
CREATE OR REPLACE VIEW DIARY_ENTRY_TAGS_V AS
SELECT e.ENTRY_ID,
       e.ENTRY_DATE,
       e.TITLE,
       e.BODY,
       e.VISIBILITY,
       e.STATUS,
       e.MOOD,
       e.LOCATION,
       e.CREATED_ON,
       e.CREATED_BY,
       e.UPDATED_ON,
       e.UPDATED_BY,
       (
         SELECT LISTAGG(t.NAME, ', ') WITHIN GROUP (ORDER BY t.NAME)
         FROM DIARY_ENTRY_TAG et
         JOIN TAG t ON t.TAG_ID = et.TAG_ID
         WHERE et.ENTRY_ID = e.ENTRY_ID
       ) AS TAGS_CSV
FROM DIARY_ENTRY e;
/

--------------------------------------------------------------------------------
-- SAMPLE DATA (optional seeds)
--------------------------------------------------------------------------------
INSERT INTO TAG (NAME, COLOR_HEX) VALUES ('Work',   '#3F51B5');
INSERT INTO TAG (NAME, COLOR_HEX) VALUES ('Travel', '#009688');
INSERT INTO TAG (NAME, COLOR_HEX) VALUES ('Ideas',  '#FF9800');

INSERT INTO DIARY_ENTRY (ENTRY_DATE, TITLE, BODY, VISIBILITY, STATUS, MOOD, LOCATION)
VALUES (TRUNC(SYSDATE), 'Kickoff Diary', 'First entry in the demo diary.', 'PRIVATE', 'DRAFT', 'Neutral', 'Home');

-- Link first entry to two tags
INSERT INTO DIARY_ENTRY_TAG (ENTRY_ID, TAG_ID)
SELECT e.ENTRY_ID, t.TAG_ID
FROM DIARY_ENTRY e CROSS JOIN TAG t
WHERE e.TITLE = 'Kickoff Diary' AND t.NAME IN ('Work','Ideas');

COMMIT;
